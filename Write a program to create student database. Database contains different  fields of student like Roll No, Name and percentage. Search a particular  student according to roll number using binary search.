


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Student {
    int rollNo;
    char name[50];
    float percentage;
};

typedef struct Student Student;

// Function to compare roll numbers for binary search
int compareRollNo(const void *a, const void *b) {
    return ((Student *)a)->rollNo - ((Student *)b)->rollNo;
}

// Function to perform binary search on the student array
int binarySearch(Student students[], int n, int targetRollNo) {
    int low = 0, high = n - 1;
    
    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (students[mid].rollNo == targetRollNo) {
            return mid; // Student found at index mid
        } else if (students[mid].rollNo < targetRollNo) {
            low = mid + 1; // Search in the right half
        } else {
            high = mid - 1; // Search in the left half
        }
    }

    return -1; // Student not found
}

int main() {
    int n, i, targetRollNo;

    printf("Enter the number of students: ");
    scanf("%d", &n);

    Student *students = (Student *)malloc(n * sizeof(Student));

    // Input student data
    for (i = 0; i < n; i++) {
        printf("\nEnter details for student %d:\n", i + 1);
        printf("Roll No: ");
        scanf("%d", &students[i].rollNo);
        printf("Name: ");
        scanf("%s", students[i].name);
        printf("Percentage: ");
        scanf("%f", &students[i].percentage);
    }

    // Sort the array based on roll number for binary search
    qsort(students, n, sizeof(Student), compareRollNo);

    // Input roll number to search
    printf("\nEnter the Roll No to search: ");
    scanf("%d", &targetRollNo);

    // Perform binary search
    int result = binarySearch(students, n, targetRollNo);

    // Display search result
    if (result != -1) {
        printf("\nStudent found!\n");
        printf("Roll No: %d\n", students[result].rollNo);
        printf("Name: %s\n", students[result].name);
        printf("Percentage: %.2f\n", students[result].percentage);
    } else {
        printf("\nStudent not found.\n");
    }

    free(students); // Free allocated memory

    return 0;
}
